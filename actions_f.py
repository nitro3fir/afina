from vk import change_keyboard

def search_in_tree(tree, directory):
    copied_tree = tree
    for head in directory:
        copied_tree = copied_tree[head]
    return copied_tree

class StudentActions:

    @staticmethod
    def to_profile(student):
        student.append_directory('profile')
        return student.get_profile()

    @staticmethod
    def to_results(student):
        student.append_directory('results')

    @staticmethod
    def set_default_directory(student):
        student.set_default_directory()

    @staticmethod
    def pop_directory(student):
        student.pop_directory()

    class Profile:

        @staticmethod
        def to_region(student):
            student.append_directory('region')

        @staticmethod
        def determinate_region(student, reg_name):
            region_num = student.region_str_to_num(reg_name)
            if region_num == -1:
                answer = '\n\n–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–ª–∏ –º–∞–ª–æ —Å–∏–º–≤–æ–ª–æ–≤'
            elif region_num == -2:
                answer = '\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω'
            else:
                student.append_directory(region_num)
                answer = '–í–∞—à —Ä–µ–≥–∏–æ–Ω: ' + student.region_num_to_str(region_num) + '?'
            return answer

        @staticmethod
        def region_agreed(student):
            student.change_region(user_directory[-1])
            actions_f.StudentActions.pop_directory(student)
            actions_f.StudentActions.pop_directory(student)

        @staticmethod
        def region_disagreed():
            actions_f.StudentActions.pop_directory(student)

    class Results:

        @staticmethod
        def keyboard_of_selected_subject(student, keyboard): 
            for index, subject in enumerate(student.get_subjects()):
                change_keyboard(keyboard, ("white", student.subject_short_name_to_full(subject)))
                if index % 2 == 1:
                    change_keyboard(keyboard, "add_line")

        @staticmethod
        def add_subject():
            student.append_directory("addsub")

        @staticmethod
        def remove_subject():
            student.append_directory("dropsub")

        class AddSub:

            @staticmethod
            def technical():
                student.append_directory("tech")

            @staticmethod
            def humanitarian():
                student.append_directory("humn")

            @staticmethod
            def natural():
                student.append_directory("ests")

            @staticmethod
            def languages():
                student.append_directory("lang")

            @staticmethod
            def subjects_keyboard(student, keyboard, sphere_of_activity):
                for tech_subject in enumerate({
                                              "tech": ('matp', 'matb', 'phys', 'infa'),
                                              "humn": ('obsh', 'litr', 'hist'),
                                              "ests": ('biol', 'chem', 'geog'),
                                              "lang": ('rusl')
                                              }.get(sphere_of_activity)):
                    if tech_subject not in student.get_subjects():
                        change_keyboard(keyboard, (tech_subject, "white"))
                        change_keyboard(keyboard, "add_line")
                

            @staticmethod
            def add_subject(student, sub_name):
                student.add_subject(sub_name)

        class DropSub:

            @staticmethod
            def subjects_keyboard(student, keyboard):
                for index, subject in enumerate(student.get_subjects()):
                    change_keyboard(keyboard, ("white", student.subject_short_name_to_full(subject)))
                    if index % 2 == 1:
                        change_keyboard(keyboard, "add_line")

            @staticmethod
            def drop_subject(student, sub_name):
                student.drop_subject(sub_name)

        class Subject:

            @staticmethod
            def get_selected_subject(student, sub_name):
                return student.subject_short_name_to_full(sub_name)

            @staticmethod
            def drop_last():
                student.append_directory('drop')

            @staticmethod
            def get_last():
                student.append_directory('see')

            @staticmethod
            def change_last():
                student.append_directory('change')

            @staticmethod
            def get_all():
                student.append_directory('seeall')

            @staticmethod
            def add():
                student.append_directory('add')

            class Add:

                @staticmethod
                def adding():
                    error = student.add_result(user_directory[2], event.text)
                    if error == -1:
                        error_message = '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ'
                    elif error == -2:
                        error_message = '–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã'
                    elif error == -3:
                        error_message = '–ï—Å—Ç—å –±–∞–ª–ª –∑–∞ –∑–∞–¥–∞–Ω–∏–µ, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–π –≤–æ–∑–º–æ–∂–Ω—ã–π'
                    elif error == -4:
                        error_message = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
                    elif error == -5:
                        error_message = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏–ª–∏ —Å–µ–∫—É–Ω–¥–∞—Ö –±–æ–ª–µ–µ –¥–≤—É—Ö —Ü–∏—Ñ—Ä'
                    elif error == -6:
                        error_message = '–í–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã'
                    elif error == -7:
                        error_message = '–£–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç –∏–ª–∏ —Å–µ–∫—É–Ω–¥ –±–æ–ª—å—à–µ 60 –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∞—Å–æ–≤ –±–æ–ª—å—à–µ 24'
                    elif error == -8:
                        error_message = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–±–Ω–∏–∫–∞(–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã)'
                    else:
                        answer = '–ü—Ä–æ–±–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω'
                        actions_f.StudentActions.pop_directory(student)

                @staticmethod
                def get_max_score():
                    answer = student.get_max_score(sub_name)

            class See:

                @staticmethod
                def see():
                    result = student.get_last_result(user_directory[2])
                    if result == -1:
                        error_message = '–ü—Ä–æ–±–Ω–∏–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'
                        user_directory = user_directory[0:-1]
                    else:
                        answer = result

            class SeeAll:

                @staticmethod
                def see():
                    result = student.get_all_results(user_directory[2])
                    if result == -1:
                        error_message = '–ü—Ä–æ–±–Ω–∏–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'
                        user_directory = user_directory[0:-1]
                    else:
                        answer = result

            #class Change:

            class Drop:

                @staticmethod
                def show_last():
                    answer = student.get_last_result(sub_name)

                @staticmethod
                def agreed():
                    student.drop_last_result(sub_name)

                @staticmethod
                def disagreed():
                    actions_f.StudentActions.pop_directory(student)

TREE = {
    "student": {
        "main": {
            "action": {
                "–ü—Ä–æ–±–Ω–∏–∫–∏üìä": "actions_f.StudentActions.to_results(student)",
                "–ü—Ä–æ—Ñ–∏–ª—åüóø": "actions_f.StudentActions.to_profile(student)"
            },
            "answer": {
                "keyboard": [
                    [
                        "white",
                        "–ü—Ä–æ—Ñ–∏–ª—åüóø"
                    ],
                    [
                        "white",
                        "–ü—Ä–æ–±–Ω–∏–∫–∏üìä"
                    ]
                ],
                "text": "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª"
            },
            "profile": {
                "action": {
                    "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ωüåç": "actions_f.StudentActions.Profile.to_region()",
                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                    "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                },
                "answer": {
                    "keyboard": [
                        [
                            "white",
                            "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ωüåç"
                        ],
                        "add_line",
                        [
                            "blue",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                        ],
                        [
                            "blue",
                            "–ù–∞–∑–∞–¥ ‚Ü©"
                        ]
                    ],
                    "text": ""
                },
                "region": {
                    "action": {
                        "any": "actions_f.StudentActions.Profile.determinate_region(student, event.text)",
                        "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                        "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                    },
                    "answer": {
                        "keyboard": [
                            [
                                "blue",
                                "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                            ],
                            [
                                "blue",
                                "–ù–∞–∑–∞–¥ ‚Ü©"
                            ]
                        ],
                        "text": "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞"
                    },
                    "region_num": {
                        "action": {
                            "–î–∞": "actions_f.StudentActions.Profile.region_agreed(student)",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–ù–µ—Ç": "actions_f.StudentActions.Profile.region_disagreed()"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "red",
                                    "–ù–µ—Ç"
                                ],
                                [
                                    "green",
                                    "–î–∞"
                                ],
                                "add_line",
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": ""
                        }
                    }
                }
            },
            "results": {
                "action": {
                    "default": "actions_f.StudentActions.Results.keyboard_of_selected_subject(student, keyboard)",
                    "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç": "actions_f.StudentActions.Results.add_subject()",
                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                    "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                    "–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç": "actions_f.StudentActions.Results.remove_subject()"
                },
                "addsub": {
                    "action": {
                        "–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏üìö": "actions_f.StudentActions.Results.AddSub.humanitarian()",
                        "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏üåç": "actions_f.StudentActions.Results.AddSub.natural()",
                        "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                        "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                        "–¢–æ—á–Ω—ã–µ –Ω–∞—É–∫–∏üî©": "actions_f.StudentActions.Results.AddSub.technical()",
                        "–Ø–∑—ã–∫–∏‚úí": "actions_f.StudentActions.Results.AddSub.languages()"
                    },
                    "answer": {
                        "keyboard": [
                            [
                                "white",
                                "–¢–æ—á–Ω—ã–µ –Ω–∞—É–∫–∏üî©"
                            ],
                            [
                                "white",
                                "–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏üìö"
                            ],
                            "add_line",
                            [
                                "white",
                                "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏üåç"
                            ],
                            [
                                "white",
                                "–Ø–∑—ã–∫–∏‚úí"
                            ],
                            "add_line",
                            [
                                "blue",
                                "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                            ],
                            [
                                "blue",
                                "–ù–∞–∑–∞–¥ ‚Ü©"
                            ]
                        ],
                        "text": "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞"
                    },
                    "ests": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.AddSub.subjects_keyboard(student, keyboard, 'ests')",
                            "–ë–∏–æ–ª–æ–≥–∏—èüß¨": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'biol')",
                            "–ì–µ–æ–≥—Ä–∞—Ñ–∏—èüåç": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'geog')",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–•–∏–º–∏—èüß™": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'chem')"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
                        }
                    },
                    "humn": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.AddSub.subjects_keyboard(student, keyboard, 'humn')",
                            "–ò—Å—Ç–æ—Ä–∏—èüìú": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'hist')",
                            "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞üìö": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'litr')",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µüí∏": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'obsh')"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "white",
                                    "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µüí∏"
                                ],
                                "add_line",
                                [
                                    "white",
                                    "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞üìö"
                                ],
                                [
                                    "white",
                                    "–ò—Å—Ç–æ—Ä–∏—èüìú"
                                ],
                                "add_line",
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
                        }
                    },
                    "lang": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.AddSub.subjects_keyboard(student, keyboard, 'lang')",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫‚úí": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'rusl')"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "white",
                                    "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫‚úí"
                                ],
                                "add_line",
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
                        }
                    },
                    "tech": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.AddSub.subjects_keyboard(student, keyboard, 'tech')",
                            "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üíª": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'infa')",
                            "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–∞–∑–∞üìè": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'matb')",
                            "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—åüìê": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'matp')",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–§–∏–∑–∏–∫–∞üî©": "actions_f.StudentActions.Results.AddSub.add_subject(student, 'phys')"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
                        }
                    }
                },
                "answer": {
                    "keyboard": [
                        [
                            "red",
                            "–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç"
                        ],
                        [
                            "green",
                            "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç"
                        ],
                        "add_line",
                        [
                            "blue",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                        ],
                        [
                            "blue",
                            "–ù–∞–∑–∞–¥ ‚Ü©"
                        ]
                    ],
                    "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç"
                },
                "dropsub": {
                    "action": {
                        "default": "actions_f.StudentActions.Results.DropSub.subjects_keyboard(student, keyboard)",
                        "–ë–∏–æ–ª–æ–≥–∏—èüß¨": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'biol')",
                        "–ì–µ–æ–≥—Ä–∞—Ñ–∏—èüåç": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'geog')",
                        "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üíª": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'infa')",
                        "–ò—Å—Ç–æ—Ä–∏—èüìú": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'hist')",
                        "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞üìö": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'litr')",
                        "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–∞–∑–∞üìè": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'matb')",
                        "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—åüìê": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'matp')",
                        "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                        "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                        "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µüí∏": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'obsh')",
                        "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫‚úí": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'rusl')",
                        "–§–∏–∑–∏–∫–∞üî©": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'phys')",
                        "–•–∏–º–∏—èüß™": "actions_f.StudentActions.Results.DropSub.drop_subject(student, 'chem')"
                    },
                    "answer": {
                        "keyboard": [
                            [
                                "blue",
                                "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                            ],
                            [
                                "blue",
                                "–ù–∞–∑–∞–¥ ‚Ü©"
                            ]
                        ],
                        "text": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
                    }
                },
                "subname": {
                    "action": {
                        "default": "actions_f.StudentActions.Results.Subject.get_selected_subject(student, sub_name)",
                        "–î–æ–±–∞–≤–∏—Ç—å": "actions_f.StudentActions.Results.Subject.add()",
                        "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π": "actions_f.StudentActions.Results.Subject.change_last()",
                        "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                        "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                        "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ": "actions_f.StudentActions.Results.Subject.get_all()",
                        "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π": "actions_f.StudentActions.Results.Subject.get_last()",
                        "–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π": "actions_f.StudentActions.Results.Subject.drop_last()"
                    },
                    "add": {
                        "action": {
                            "any": "actions_f.StudentActions.Results.Subject.Add.adding()",
                            "default": "actions_f.StudentActions.Results.Subject.Add.get_max_score()",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–±–Ω–∏–∫ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏–π –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø—Ä–æ–±–µ–ª, –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n\n–ü—Ä–∏–º–µ—Ä: 4:20:00 (0:00:00, –µ—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ)"
                        }
                    },
                    "answer": {
                        "keyboard": [
                            [
                                "red",
                                "–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π"
                            ],
                            [
                                "white",
                                "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π"
                            ],
                            "add_line",
                            [
                                "white",
                                "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π"
                            ],
                            [
                                "white",
                                "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ"
                            ],
                            "add_line",
                            [
                                "green",
                                "–î–æ–±–∞–≤–∏—Ç—å"
                            ],
                            "add_line",
                            [
                                "blue",
                                "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                            ],
                            [
                                "blue",
                                "–ù–∞–∑–∞–¥ ‚Ü©"
                            ]
                        ],
                        "text": "–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç: "
                    },
                    "change": {
                        "action": {
                            "default": "answer = student.get_last_result(sub_name)",
                            "result": "error = student.add_result(user_directory[2], event.text)\nif error == -1\n\t:error_message = '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ'\nelif error == -2:\n\terror_message = '–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã'\nelif error == -3:\n\terror_message = '–ï—Å—Ç—å –±–∞–ª–ª –∑–∞ –∑–∞–¥–∞–Ω–∏–µ, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–π –≤–æ–∑–º–æ–∂–Ω—ã–π'\nelif error == -4:\n\terror_message = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'\nelif error == -5:\n\terror_message = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏–ª–∏ —Å–µ–∫—É–Ω–¥–∞—Ö –±–æ–ª–µ–µ –¥–≤—É—Ö —Ü–∏—Ñ—Ä'\nelif error == -6:\n\terror_message = '–í–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã'\nelif error == -7:\n\terror_message = '–£–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç –∏–ª–∏ —Å–µ–∫—É–Ω–¥ –±–æ–ª—å—à–µ 60 –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∞—Å–æ–≤ –±–æ–ª—å—à–µ 24'\nelif error == -8:\n\terror_message = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–±–Ω–∏–∫–∞(–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã)'\nelse:\n\tanswer = '–ü—Ä–æ–±–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω'\n\tuser_directory = user_directory[0:-1]",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–±–Ω–∏–∫ –≤ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –∏ –≤ '–î–æ–±–∞–≤–∏—Ç—å'\n\n–í–∞—à –ø—Ä–æ—à–ª—ã–π –ø—Ä–æ–±–Ω–∏–∫: "
                        }
                    },
                    "drop": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.Subject.Drop.show_last()",
                            "–î–∞": "actions_f.StudentActions.Results.Subject.Drop.agreed()",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)",
                            "–ù–µ—Ç": "actions_f.StudentActions.Results.Subject.Drop.disagreed()"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "green",
                                    "–ù–µ—Ç"
                                ],
                                [
                                    "red",
                                    "–î–∞"
                                ],
                                "add_line",
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–±–Ω–∏–∫ –≤ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –∏ –≤ '–î–æ–±–∞–≤–∏—Ç—å'\n\n–í–∞—à –ø—Ä–æ—à–ª—ã–π –ø—Ä–æ–±–Ω–∏–∫: "
                        }
                    },
                    "see": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.Subject.See.see()",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": ""
                        }
                    },
                    "seeall": {
                        "action": {
                            "default": "actions_f.StudentActions.Results.Subject.SeeAll.see()",
                            "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†": "actions_f.StudentActions.set_default_directory(student)",
                            "–ù–∞–∑–∞–¥ ‚Ü©": "actions_f.StudentActions.pop_directory(student)"
                        },
                        "answer": {
                            "keyboard": [
                                [
                                    "blue",
                                    "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
                                ],
                                [
                                    "blue",
                                    "–ù–∞–∑–∞–¥ ‚Ü©"
                                ]
                            ],
                            "text": ""
                        }
                    }
                }
            }
        }
    }
}